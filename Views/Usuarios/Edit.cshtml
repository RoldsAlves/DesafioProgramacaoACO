@model DesafioProgramacao.Models.Usuario

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Usuario</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.DataCadastro)

        <div class="form-group">
            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @pattern = "[0-9]{11}", @onkeyup = "formataCPF(this)" } })
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PerfilId, "PerfilId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PerfilId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PerfilId, "", new { @class = "text-danger" })
            </div>
        </div>

        <section class="section-endereco">
            <div class="form-group tipo-endereco">
                @Html.LabelFor(model => model.UsuarioEnderecos.Single().TipoEndereco, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TipoEndereco", null, string.Empty, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UsuarioEnderecos.Single().TipoEndereco, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group lista-endereco">
                @Html.LabelFor(model => model.UsuarioEnderecos.Single().EnderecoId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.UsuarioEnderecos.Single().EnderecoId, (SelectList)ViewBag.EnderecoId, string.Empty, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UsuarioEnderecos.Single().EnderecoId, "", new { @class = "text-danger" })
                </div>
            </div>
        </section>

        <div class="form-group">
            @Html.Label("Novo Endereço")
            <a href="#" id="AddEndereco" class="btn btn-primary bntAddEndereco">+</a>
        </div>

        @foreach (var item in Model.UsuarioEnderecos)
        {
            <div class="form-group">
                @Html.LabelFor(model => item.TipoEndereco, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => item.TipoEndereco, (SelectList)ViewBag.TipoEndereco, string.Empty, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => item.TipoEndereco, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => item.EnderecoId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => item.EnderecoId, (SelectList)ViewBag.EnderecoId, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => item.EnderecoId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $('.bntAddEndereco').on('click', function () {
            var tipoEndereco = $('.tipo-endereco').first().clone();
            var listaEndereco = $('.lista-endereco').first().clone();
            $('.section-endereco').append(tipoEndereco);
            $('.section-endereco').append(listaEndereco);
        });
    </script>
    <script src="~/Scripts/FormataCPF.js"></script>
}
